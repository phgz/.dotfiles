#!/bin/bash

layout_poetry() {
    if [[ ! -f poetry.lock ]]; then
        log_error 'No pyproject.toml found.  Use `poetry new` or `poetry init` to create one first.'
        exit 2
    fi

    VIRTUAL_ENV=$(
        python3.11 <<EOF
import base64, hashlib, pathlib, tomllib

h = base64.urlsafe_b64encode(hashlib.sha256(bytes(pathlib.Path.cwd())).digest()).decode()[:8]
p = tomllib.load(open("pyproject.toml", "rb"))["tool"]["poetry"]["name"].replace(".", "-").replace("_", "-")
cache = ".cache" if "$(uname -s)" == "Linux" else "Library/Caches"
virtualenvs = (pathlib.Path.home() / cache / "pypoetry/virtualenvs").iterdir()
env_name = next(dir for dir in virtualenvs if str(dir.name).startswith(p + "-" + h))
print(env_name)
EOF
    )
    export VIRTUAL_ENV
    export POETRY_ACTIVE=1
    PATH_add "$VIRTUAL_ENV/bin"
}

source_env "$HOME"/.envrc
