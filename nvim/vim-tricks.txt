``                        => go to last jump position
`.                        => go to last inserted text position
`<                        => cursor to the start of the highlighted area
12|                       => go to column 12
12:                       => :.,.+11
&                         => repeat last :s
@:                        => repeat the previous ":" command N times

<C-r> =                   => insert result of expr
<C-g>                     => show ruler
<C-l>                     => clear search highlight
<Ctrl-]>                  => jump to tag definition
<CTRL-W>^                 => split current window and edit alternate file

:%!                       => filter all lines through the {filter} command
:*                        => :'<,'>
:=                        => echo last line number
:s/a/&b                   => append b to a
:s/\%Va/b                 => apply substitution only in previous visual range
:s/.\{-}/b                => non-greedy `*` equivalent
:s/.\zea/b                => until `a` (`a` not included in match, \zs for match start)
:s/\_./b                  => any single character including newline
:s/\(a\)/\=f(submatch(1)) => apply function `f` to submatch
:s/\d\+/\=submatch(0)+1   => increment match of 1 unit
:g/p/s/a/b                => apply substitution only where `p` pattern appears
:<C-v>                    => insert literal
:<C-f>                    => expand command line
:cd %:h                   => change to the directory of the current file
:write ++p                => creates parent directories

gJ                        => join without space
gf                        => start editing the file whose name is under the cursor
gI                        => Insert at column 1
g{j,k}                    => Go down/up by one screen line
gUU                       => Make line uppercase (`guu` for lowercase)
g{u,U}<motion>            => Make <motion> lowercase/uppercase
g?                        => encode text ROT13
g&                        => repeat last ":s" on all lines
g{#,*}                    => search under cursor, no word boundary
g{-,+}                    => older/newer text state
g{,,;}                    => go to next/previous position in changelist
g<C-g>                    => show stats
g<C-{a,x}>                => increment/decrement sequentially
g{0,^,$}                  => Go to first/first non-blank/last char on screen line
g{p,P}                    => same as `p` or `P`, but do not move cursor
g{n,N}                    => select next/prev search match
ga                        => print ascii value of char under cursor

yVaf                      => force operator to work linewise
v_gv                      => toggle between current and last visual selection
v_{o,O}                   => go to start/end of visual selection
v_J                       => join the highlighted lines
